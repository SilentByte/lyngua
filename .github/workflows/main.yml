name: Deploy

on:
  push:
    branches:
      - master
jobs:
  pytest:
    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    env:
      AZURE_SPEECH_API_KEY: ${{ secrets.AZURE_SPEECH_API_KEY }}
      AZURE_SPEECH_ENDPOINT: ${{ secrets.AZURE_SPEECH_ENDPOINT }}
      AZURE_TRANSLATE_KEY: ${{ secrets.AZURE_TRANSLATE_KEY }}
      AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}

    steps:
      - uses: actions/checkout@v2
      - uses: docker-practice/actions-setup-docker@master
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - id: environment_setup
        run: sudo apt update -y && sudo apt install ffmpeg -y
      - id: pip_install
        run: python -m pip install -r api/requirements.txt && python -m pip install api/ && python -m pip install -r api/dev-requirements.txt
      - id: pytest
        run: pytest api/tests/test_container.py
      - id: docker_build
        run: docker_build_api

  dockerpush:
    if: github.ref == 'refs/heads/master'
    name: Docker push Lyngua API
    needs: pytest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - id: what_directories
        run: ls
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: api
          file: api/Dockerfile
          push: true
          tags: stephenmo/lyngua:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          azcliversion: 2.0.72
          inlineScript: |
            az webapp restart --name ${{ secrets.WEBAPP_NAME }} --resource-group ${{ secrets.WEBAPP_RG }}
  build:
    if: github.ref == 'refs/heads/master'
    name: Push Website
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - id: npm_build
        run: ./build.sh

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy website
        uses: bacongobbler/azure-blob-storage-upload@v1.1.1
        with:
          source_dir: dist
          container_name: '$web'
          connection_string: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
          sync: false